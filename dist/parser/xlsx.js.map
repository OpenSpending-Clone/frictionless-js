{"version":3,"sources":["../../src/parser/xlsx.js"],"names":["Readable","require","XLSX","parse","getParseOptions","xlsxParser","file","keyed","sheetIdxOrName","buffer","window","displayName","browserBuffer","workbook","read","type","selectedSheetName","constructor","name","SheetNames","sheet","Sheets","csv","utils","sheet_to_csv","stream","push","pipe","columns","ltrim","module","exports"],"mappings":";;;;;;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,QAAnC;;AACA,MAAME,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,WAAD,CAArB;;AAEA,MAAM;AAAEG,EAAAA;AAAF,IAAsBH,OAAO,CAAC,OAAD,CAAnC;;AAEA,MAAMI,UAAU;AAAA,+BAAG,WAAOC,IAAP,EAAmD;AAAA,QAAtCC,KAAsC,uEAA9B,KAA8B;AAAA,QAAvBC,cAAuB,uEAAN,CAAM;AACpE,QAAIC,MAAJ;;AACA,QAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCJ,IAAI,CAACK,WAAL,KAAqB,eAA1D,EAA2E;AACzEF,MAAAA,MAAM,GAAG,MAAMH,IAAI,CAACG,MAApB;AACD,KAFD,MAEO;AACL;AACAA,MAAAA,MAAM,GAAG,MAAMH,IAAI,CAACM,aAApB;AACD;;AACD,UAAMC,QAAQ,GAAGX,IAAI,CAACY,IAAL,CAAUL,MAAV,EAAkB;AAAEM,MAAAA,IAAI,EAAE;AAAR,KAAlB,CAAjB;AACA,QAAIC,iBAAiB,GAAGR,cAAxB;;AACA,QAAIA,cAAc,CAACS,WAAf,CAA2BC,IAA3B,KAAoC,QAAxC,EAAkD;AAChDF,MAAAA,iBAAiB,GAAGH,QAAQ,CAACM,UAAT,CAAoBX,cAApB,CAApB;AACD;;AACD,UAAMY,KAAK,GAAGP,QAAQ,CAACQ,MAAT,CAAgBL,iBAAhB,CAAd;AACA,UAAMM,GAAG,GAAGpB,IAAI,CAACqB,KAAL,CAAWC,YAAX,CAAwBJ,KAAxB,CAAZ;AACA,UAAMK,MAAM,GAAG,IAAIzB,QAAJ,EAAf;AACAyB,IAAAA,MAAM,CAACC,IAAP,CAAYJ,GAAZ;AACAG,IAAAA,MAAM,CAACC,IAAP,CAAY,IAAZ;AACA,WAAOD,MAAM,CAACE,IAAP,CACLxB,KAAK,CAAC;AACJyB,MAAAA,OAAO,EAAErB,KAAK,GAAG,IAAH,GAAU,IADpB;AAEJsB,MAAAA,KAAK,EAAE;AAFH,KAAD,CADA,CAAP;AAMD,GAxBe;;AAAA,kBAAVxB,UAAU;AAAA;AAAA;AAAA,IAAhB;;AA0BAyB,MAAM,CAACC,OAAP,GAAiB;AACf1B,EAAAA;AADe,CAAjB","sourcesContent":["const Readable = require('stream').Readable\nconst XLSX = require('xlsx')\nconst parse = require('csv-parse')\n\nconst { getParseOptions } = require('./csv')\n\nconst xlsxParser = async (file, keyed = false, sheetIdxOrName = 0) => {\n  let buffer\n  if (typeof window === 'undefined' || file.displayName === 'FileInterface') {\n    buffer = await file.buffer\n  } else {\n    // Running in browser\n    buffer = await file.browserBuffer\n  }\n  const workbook = XLSX.read(buffer, { type: 'buffer' })\n  let selectedSheetName = sheetIdxOrName\n  if (sheetIdxOrName.constructor.name === 'Number') {\n    selectedSheetName = workbook.SheetNames[sheetIdxOrName]\n  }\n  const sheet = workbook.Sheets[selectedSheetName]\n  const csv = XLSX.utils.sheet_to_csv(sheet)\n  const stream = new Readable()\n  stream.push(csv)\n  stream.push(null)\n  return stream.pipe(\n    parse({\n      columns: keyed ? true : null,\n      ltrim: true,\n    })\n  )\n}\n\nmodule.exports = {\n  xlsxParser,\n}\n"],"file":"xlsx.js"}